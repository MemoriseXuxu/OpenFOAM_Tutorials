/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     pimpleFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         0.1;

deltaT          0.001;

writeControl    timeStep;

writeInterval   1;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

adjustTimeStep  no;

//maxCo           100;

/*
functions
{

  yPlus1
  {
      type        yPlus;
      libs        ("fieldFunctionObjects");
      writeControl    timeStep;
      writeInterval   100;
  }

    #includeFunc  flowRatePatch(name=inlet)
    #includeFunc  flowRatePatch(name=outlet)
    #includeFunc  solverInfo


    testResidual
    {
        type            solverInfo;
        libs            ("libutilityFunctionObjects.so");
        fields          (U p);
        writeResidualFields yes;
        writeControl    timeStep;
        writeInterval   1;
    }

  forces
  {
      type          forces;
      libs          (forces);

      writeControl  timeStep;
      timeInterval  1;

      log           yes;

      patches       (blades);
      rho           rhoInf;     // Indicates incompressible
      log           true;
      rhoInf        1000;          // Redundant for incompressible

      CofR          (0 0 0);    // Rotation around centre line of propeller
      pitchAxis     (0 0 1);
  }

  pressure
  {
      // Mandatory entries (unmodifiable)
      type            pressure;
      libs            (fieldFunctionObjects);

      // Mandatory entries (runtime modifiable)
      mode            total;

      // Optional entries (runtime modifiable)
      p               p;
      U               U;
      rho             rhoInf;
      rhoInf          1000.0; // enabled if rho=rhoInf
      pRef            0.0;
      hydroStaticMode none;
      g               (0 -9.81 0); // enabled if hydroStaticMode != none
      hRef            0.0;         // enabled if hydroStaticMode != none
      pInf            0.0;
      UInf            (1 0 0);
      
      writeControl    timeStep;
      writeInterval   1;

  }

}

*/

// ************************************************************************* //
